name: Build & Release SpiderNet

on:
  push:
    tags:
      - "v*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare ZIP (with installers)
        run: |
          mkdir -p dist
          zip -r dist/spidernet_secure.zip . \
            -x "*.git*" ".github/*"

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: dist/spidernet_secure.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: Build & Release SpiderNet

on:
  push:
    tags:
      - "v*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Prepare ZIP
        run: |
          mkdir -p dist
          zip -r dist/spidernet_secure.zip . \
            -x "*.git*" ".github/*"

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/spidernet_secure.zip
            install.sh
            install.ps1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: Build & Release SpiderNet

on:
  push:
    tags:
      - "v*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create ZIP (exclude GitHub folder)
        run: zip -r spidernet_secure.zip . -x "*.git*" ".github/*"

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            spidernet_secure.zip
            install.sh
            install.ps1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Check ZIP
        run: |
          if [ ! -f spidernet_secure.zip ]; then
            echo "❌ ZIP not found!"
            exit 1
          fi
          echo "✅ ZIP created successfully"
name: Build & Release SpiderNet

on:
  push:
    tags:
      - "v*.*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Make ZIP package
        run: |
          mkdir -p dist
          zip -r dist/spidernet_secure.zip . -x "*.git*" ".github/*"
          echo "=== ZIP CONTENTS ==="
          unzip -l dist/spidernet_secure.zip

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/spidernet_secure.zip
            install.sh
            install.ps1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: Build & Release SpiderNet

on:
  push:
    tags:
      - "v*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Create build directory
        run: |
          mkdir build
          cp -r * build/ || true
          # Ensure installers are included
          cp install.sh build/install.sh || true
          cp install.ps1 build/install.ps1 || true

      - name: Create ZIP
        run: |
          cd build
          zip -r ../spidernet_secure.zip . -x "*.git*" ".github/*"

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            spidernet_secure.zip
            build/install.sh
            build/install.ps1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

---

# ⚙️ Updated `.github/workflows/release.yml` (v4.0+)

Paste this into your repo at `.github/workflows/release.yml`:

```yaml
name: Build & Release SpiderNet
on:
  push:
    tags:
      - "v*.*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          pip install pyqt5 pillow

      - name: Create release package
        run: |
          mkdir -p release
          cp install.sh install.ps1 cockpit.py release/
          cp -r Core Agents Dashboard Modules MemoryBank Docs release/ || true
          cp -r assets release/ || true
          echo "# Projects" > release/PROJECTS.md
          echo "# Ideas" > release/IDEAS.md
          cd release && zip -r ../spidernet_secure.zip .

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: |
            spidernet_secure.zip
            install.sh
            install.ps1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: Build & Release SpiderNet

on:
  push:
    tags:
      - 'v*'   # Runs whenever you push a tag like v3.7

permissions:
  contents: write

jobs:
  build-release:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Prepare release bundle
        run: |
          mkdir -p dist/spidernet
          # Copy agents, assets, installers
          cp -r agents dist/spidernet/
          cp -r assets dist/spidernet/
          cp install.sh install.ps1 cockpit.py dist/spidernet/ || true
          
          # Always embed seeded PROJECTS.md + IDEAS.md
          echo "# Projects" > dist/spidernet/PROJECTS.md
          echo "- Example Project" >> dist/spidernet/PROJECTS.md
          echo "# Ideas" > dist/spidernet/IDEAS.md
          echo "- Example Idea" >> dist/spidernet/IDEAS.md

          # Zip everything
          cd dist
          zip -r spidernet_secure.zip spidernet

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          files: |
            dist/spidernet_secure.zip
            install.sh
            install.ps1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: Build & Release SpiderNet

on:
  release:
    types: [created]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Prepare build tree
        run: |
          mkdir -p spidernet_secure_v${{ github.ref_name }}
          cp -r agents spidernet_secure_v${{ github.ref_name }}/
          cp -r assets spidernet_secure_v${{ github.ref_name }}/
          cp cockpit.py spidernet_secure_v${{ github.ref_name }}/
          cp install.sh spidernet_secure_v${{ github.ref_name }}/
          cp install.ps1 spidernet_secure_v${{ github.ref_name }}/
          echo "# Projects" > spidernet_secure_v${{ github.ref_name }}/PROJECTS.md
          echo "# Ideas" > spidernet_secure_v${{ github.ref_name }}/IDEAS.md

      - name: Zip package
        run: |
          cd spidernet_secure_v${{ github.ref_name }}
          zip -r ../spidernet_secure.zip .
          cd ..

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: spidernet_secure.zip
name: Build & Release SpiderNet

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Prepare bundle
        run: |
          mkdir -p bundle/agents bundle/assets
          cp agents/* bundle/agents/ || true
          cp assets/* bundle/assets/ || true
          cp cockpit.py bundle/ || true
          cp install.sh bundle/
          cp install.ps1 bundle/
          echo "# 🌟 My Projects" > bundle/PROJECTS.md
          echo "# 💡 My Ideas" > bundle/IDEAS.md
          cd bundle && zip -r ../spidernet_secure.zip *

      - name: Upload release asset
        uses: softprops/action-gh-release@v1
        with:
          files: spidernet_secure.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#!/bin/bash
set -euo pipefail

USER=$(whoami)
HOME_DIR="/home/$USER"
INSTALL_DIR="$HOME_DIR/SpiderNet"
SPN_BIN="$HOME_DIR/.local/bin"

echo "=== 🌻 Installing SpiderNet for $USER ==="

# Download latest release ZIP
ZIP_URL=$(curl -s https://api.github.com/repos/Sattvamusik/spidernet/releases/latest \
  | grep "browser_download_url" \
  | grep "spidernet_secure.zip" \
  | cut -d '"' -f 4)

if [ -z "$ZIP_URL" ]; then
  echo "❌ Could not find spidernet_secure.zip in the latest release!"
  exit 1
fi

TMP="/tmp/spidernet_secure.zip"
curl -L -o "$TMP" "$ZIP_URL"
unzip -o "$TMP" -d "$INSTALL_DIR"

# Create spn launcher
cat > "$SPN_BIN/spn" << 'EOF'
#!/bin/bash
BASE="$HOME/SpiderNet"
case "$1" in
  cockpit)  nohup python3 "$BASE/cockpit.py" >/dev/null 2>&1 & echo "🌻 Cockpit started" ;;
  clean)    bash "$BASE/cleaner.sh" ;;
  health)   bash "$BASE/hospital.sh" ;;
  trauma)   bash "$BASE/trauma.sh" ;;
  sync)     python3 "$BASE/agents/SpiderSync/spidersync.py" ;;
  *)        echo "Usage: spn [cockpit|clean|health|trauma|sync]" ;;
esac
EOF
chmod +x "$SPN_BIN/spn"

# Desktop shortcut
cat > "$HOME_DIR/Desktop/spidernet.desktop" << EOL
[Desktop Entry]
Name=SpiderNet Cockpit
Comment=Self-Healing Dashboard
Exec=spn cockpit
Icon=$INSTALL_DIR/assets/sunflower.png
Terminal=false
Type=Application
Categories=Utility;
EOL
chmod +x "$HOME_DIR/Desktop/spidernet.desktop"

echo "✅ Install complete! Run: spn cockpit"
name: Build & Release SpiderNet

on:
  push:
    tags:
      - "v*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare dist folder
        run: |
          mkdir -p dist
          mkdir -p dist/agents dist/assets
          
          # Copy core files
          cp -r agents assets cockpit.py install.sh install.ps1 README.md dist/

          # Always embed dummy PROJECTS.md + IDEAS.md
          echo "# Projects" > dist/PROJECTS.md
          echo "# Ideas" > dist/IDEAS.md

      - name: Zip SpiderNet
        run: |
          cd dist
          zip -r ../spidernet_secure.zip ./*
          cd ..

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: spidernet_secure.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: Build & Release SpiderNet

on:
  push:
    tags:
      - "v*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare ZIP
        run: |
          mkdir -p dist
          zip -r dist/spidernet_secure.zip \
            agents assets \
            cockpit.py install.sh install.ps1 \
            PROJECTS.md IDEAS.md README.md \
            -x "*.git*" ".github/*"

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: dist/spidernet_secure.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: Build & Release SpiderNet

on:
  push:
    tags:
      - "v*.*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Prepare ZIP
        run: |
          mkdir -p dist
          zip -r dist/spidernet_secure.zip . -x "*.git*" ".github/*"

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: dist/spidernet_secure.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: Build & Release SpiderNet

on:
  push:
    tags:
      - "v*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare ZIP
        run: |
          mkdir -p dist
          zip -r dist/spidernet_secure.zip . -x "*.git*" ".github/*"

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: dist/spidernet_secure.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: Build & Release SpiderNet

on:
  push:
    tags:
      - "v*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare ZIP
        run: |
          mkdir -p dist
          zip -r dist/spidernet_secure.zip . -x "*.git*" ".github/*"

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: dist/spidernet_secure.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: Build & Release SpiderNet

on:
  push:
    tags:
      - "v*.*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Zip SpiderNet
        run: |
          mkdir -p dist
          zip -r dist/spidernet_secure.zip . -x "*.git*"

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/spidernet_secure.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: Build & Release SpiderNet

on:
  push:
    tags:
      - "v*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Zip SpiderNet
        run: |
          mkdir -p dist
          zip -r dist/spidernet_secure.zip . -x "*.git*"

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/spidernet_secure.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: Build & Release SpiderNet

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Zip SpiderNet
        run: |
          zip -r spidernet_secure.zip \
            agents assets \
            install.sh install.ps1 \
            cockpit.py PROJECTS.md IDEAS.md README.md

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: spidernet_secure.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

release-builder workflow that automatically:

Zips up the repo into spidernet_secure_v3.3.zip.

Uploads that as the release asset.

Lets install.sh / install.ps1 always pull the latest release asset instead of raw repo files.


