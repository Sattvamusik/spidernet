#!/bin/bash
set -euo pipefail

USER=$(whoami)
HOME_DIR="/home/$USER"
INSTALL_DIR="$HOME_DIR/SpiderNet"
SPN_BIN="$HOME_DIR/.local/bin"

echo "=== 🌻 Installing SpiderNet for $USER ==="

# Download latest release ZIP
ZIP_URL=$(curl -s https://api.github.com/repos/Sattvamusik/spidernet/releases/latest \
  | grep "browser_download_url" \
  | grep "spidernet_secure.zip" \
  | cut -d '"' -f 4)

if [ -z "$ZIP_URL" ]; then
  echo "❌ Could not find spidernet_secure.zip in the latest release!"
  exit 1
fi

TMP="/tmp/spidernet_secure.zip"
curl -L -o "$TMP" "$ZIP_URL"
unzip -o "$TMP" -d "$INSTALL_DIR"

# Create spn launcher
cat > "$SPN_BIN/spn" << 'EOF'
#!/bin/bash
BASE="$HOME/SpiderNet"
case "$1" in
  cockpit)  nohup python3 "$BASE/cockpit.py" >/dev/null 2>&1 & echo "🌻 Cockpit started" ;;
  clean)    bash "$BASE/cleaner.sh" ;;
  health)   bash "$BASE/hospital.sh" ;;
  trauma)   bash "$BASE/trauma.sh" ;;
  sync)     python3 "$BASE/agents/SpiderSync/spidersync.py" ;;
  *)        echo "Usage: spn [cockpit|clean|health|trauma|sync]" ;;
esac
EOF
chmod +x "$SPN_BIN/spn"

# Desktop shortcut
cat > "$HOME_DIR/Desktop/spidernet.desktop" << EOL
[Desktop Entry]
Name=SpiderNet Cockpit
Comment=Self-Healing Dashboard
Exec=spn cockpit
Icon=$INSTALL_DIR/assets/sunflower.png
Terminal=false
Type=Application
Categories=Utility;
EOL
chmod +x "$HOME_DIR/Desktop/spidernet.desktop"

echo "✅ Install complete! Run: spn cockpit"
name: Build & Release SpiderNet

on:
  push:
    tags:
      - "v*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare dist folder
        run: |
          mkdir -p dist
          mkdir -p dist/agents dist/assets
          
          # Copy core files
          cp -r agents assets cockpit.py install.sh install.ps1 README.md dist/

          # Always embed dummy PROJECTS.md + IDEAS.md
          echo "# Projects" > dist/PROJECTS.md
          echo "# Ideas" > dist/IDEAS.md

      - name: Zip SpiderNet
        run: |
          cd dist
          zip -r ../spidernet_secure.zip ./*
          cd ..

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: spidernet_secure.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: Build & Release SpiderNet

on:
  push:
    tags:
      - "v*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare ZIP
        run: |
          mkdir -p dist
          zip -r dist/spidernet_secure.zip \
            agents assets \
            cockpit.py install.sh install.ps1 \
            PROJECTS.md IDEAS.md README.md \
            -x "*.git*" ".github/*"

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: dist/spidernet_secure.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: Build & Release SpiderNet

on:
  push:
    tags:
      - "v*.*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Prepare ZIP
        run: |
          mkdir -p dist
          zip -r dist/spidernet_secure.zip . -x "*.git*" ".github/*"

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: dist/spidernet_secure.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: Build & Release SpiderNet

on:
  push:
    tags:
      - "v*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare ZIP
        run: |
          mkdir -p dist
          zip -r dist/spidernet_secure.zip . -x "*.git*" ".github/*"

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: dist/spidernet_secure.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: Build & Release SpiderNet

on:
  push:
    tags:
      - "v*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare ZIP
        run: |
          mkdir -p dist
          zip -r dist/spidernet_secure.zip . -x "*.git*" ".github/*"

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: dist/spidernet_secure.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: Build & Release SpiderNet

on:
  push:
    tags:
      - "v*.*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Zip SpiderNet
        run: |
          mkdir -p dist
          zip -r dist/spidernet_secure.zip . -x "*.git*"

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/spidernet_secure.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: Build & Release SpiderNet

on:
  push:
    tags:
      - "v*.*"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Zip SpiderNet
        run: |
          mkdir -p dist
          zip -r dist/spidernet_secure.zip . -x "*.git*"

      - name: Upload Release
        uses: softprops/action-gh-release@v1
        with:
          files: dist/spidernet_secure.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
name: Build & Release SpiderNet

on:
  release:
    types: [published]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Zip SpiderNet
        run: |
          zip -r spidernet_secure.zip \
            agents assets \
            install.sh install.ps1 \
            cockpit.py PROJECTS.md IDEAS.md README.md

      - name: Upload Release Asset
        uses: softprops/action-gh-release@v1
        with:
          files: spidernet_secure.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

release-builder workflow that automatically:

Zips up the repo into spidernet_secure_v3.3.zip.

Uploads that as the release asset.

Lets install.sh / install.ps1 always pull the latest release asset instead of raw repo files.
